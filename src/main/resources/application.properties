spring.application.name=mondo-erp

# Configuración de la base de datos
# Base de datos H2 (en memoria) para desarrollo

# URL de conexión a la BD H2 en memoria llamada "mondodb"
spring.datasource.url=jdbc:h2:mem:mondodb
# Clase del driver JDBC para H2
spring.datasource.driver-class-name=org.h2.Driver
# Usuario para conectar a H2 (sa = system admin)
spring.datasource.username=sa
# Contraseña en blanco para desarrollo
spring.datasource.password=
# Habilita la consola web de H2 para administración
spring.h2.console.enabled=true
# URL para acceder a la consola H2 (http://localhost:8080/mondo-erp/h2-console)
spring.h2.console.path=/h2-console

# Configuración JPA/Hibernate

# Valida el esquema pero no lo modifica (Flyway se encargará de esto)
spring.jpa.hibernate.ddl-auto=validate
# Muestra las consultas SQL en los logs
spring.jpa.show-sql=true
# Formatea las consultas SQL para mejor legibilidad
spring.jpa.properties.hibernate.format_sql=true
# Dialecto SQL específico para H2
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Configuración para MySQL (comentada para desarrollo)
# spring.datasource.url=jdbc:mysql://localhost:3306/mondo_erp?useSSL=false&serverTimezone=UTC  # URL para MySQL
# spring.datasource.username=root                    # Usuario MySQL
# spring.datasource.password=                        # Contraseña MySQL
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect  # Dialecto para MySQL 8

# Configuración Flyway para migraciones de base de datos

# Activa Flyway para gestionar migraciones
spring.flyway.enabled=true
# Crea una línea base en bases de datos existentes
spring.flyway.baseline-on-migrate=true
# Ubicación de los scripts de migración
spring.flyway.locations=classpath:db/migration

# Configuración Thymeleaf
# Desactiva caché de plantillas para desarrollo
spring.thymeleaf.cache=false
# Carpeta donde se buscan las plantillas
spring.thymeleaf.prefix=classpath:/templates/
# Extensión de los archivos de plantillas
spring.thymeleaf.suffix=.html
# Modo de procesamiento Thymeleaf
spring.thymeleaf.mode=HTML

# Configuración Spring Security (básica para desarrollo) {deprecated}
# Usuario por defecto para autenticación
# spring.security.user.name=admin
# Contraseña por defecto (¡cambiar en producción!)
# spring.security.user.password=admin

# Configuración de servidor

# Puerto en el que corre la aplicación
server.port=8080
# Ruta base de la aplicación (http://localhost:8080/mondo-erp)
server.servlet.context-path=/mondo-erp

# Configuración de logging

# Nivel de log general
logging.level.root=INFO
# Nivel de log para tu paquete específico
logging.level.com.mondo.erp=DEBUG
# Formato del log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
# Spring Security Debug (temporal for solving "admin" password issues"
logging.level.org.springframework.security=DEBUG

# Configuración de Java Mail

# Servidor SMTP para envío de correos
spring.mail.host=smtp.example.com
# Puerto del servidor SMTP
spring.mail.port=587
# Email desde el que se enviarán correos
spring.mail.username=your-email@example.com
# Contraseña del email (usar variables de entorno en producción)
spring.mail.password=your-password
# Habilita autenticación SMTP
spring.mail.properties.mail.smtp.auth=true
# Habilita cifrado TLS
spring.mail.properties.mail.smtp.starttls.enable=true

# Actuator (monitoreo)
# Endpoints de Actuator expuestos
management.endpoints.web.exposure.include=health,info,metrics
# Muestra detalles de salud solo a usuarios autorizados
management.endpoint.health.show-details=when_authorized

# Spring Session
# Almacena sesiones en base de datos
spring.session.store-type=jdbc
# Inicializa automáticamente el esquema de sesiones
spring.session.jdbc.initialize-schema=always
